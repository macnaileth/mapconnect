(()=>{"use strict";var e,t={628:()=>{const e=window.wp.blocks,t=window.React,a=window.wp.i18n,l=window.wp.blockEditor,n=(window.wp.data,window.wp.coreData,window.wp.components);window.wp.element;const r=JSON.parse('{"N9":"tsum-metafields/tsu-mapconnect-map-block"}');(0,e.registerBlockType)(r.N9,{edit:function(e){const{attributes:{MC_baseUrldef:r,MC_metaUrldef:o,MC_dataUrldef:s,MC_pluginURLdef:c,MC_baseUrlset:i,MC_metaUrlset:u,MC_dataUrlset:m,MC_pluginURL:p,MC_styleDefaults:d,MC_styleset:_}}=e,b=(0,l.useBlockProps)();return console.log("*** App running @URL: "+p+" ***"),console.log("styles defaults: ",d),(0,t.createElement)("div",{...b},(0,t.createElement)(l.InspectorControls,null,(0,t.createElement)(n.PanelBody,{title:(0,a.__)("Settings")+": "+(0,a.__)("Paths","tsu-mapconnect"),initialOpen:!1},(0,t.createElement)(n.PanelRow,null,(0,t.createElement)(n.TextControl,{className:"tsum-metablock-input",label:(0,a.__)("Base URL","tsu-mapconnect"),value:""===i?r:i,onChange:t=>e.setAttributes({MC_baseUrlset:t}),help:(0,a.__)("Set the URL to the API delivering the geoJSON data here. Default value: <DEFAULT>.","tsu-mapconnect")})),(0,t.createElement)(n.PanelRow,null,(0,t.createElement)(n.TextControl,{className:"tsum-metablock-input",label:(0,a.__)("URL for Metadata","tsu-mapconnect"),value:""===u?o:u,onChange:t=>e.setAttributes({MC_metaUrlset:t})})),(0,t.createElement)(n.PanelRow,null,(0,t.createElement)(n.TextControl,{className:"tsum-metablock-input",label:(0,a.__)("URL for Database","tsu-mapconnect"),value:""===m?s:m,onChange:t=>e.setAttributes({MC_dataUrlset:t})})),(0,t.createElement)(n.PanelRow,null,(0,t.createElement)(n.TextControl,{className:"tsum-metablock-input",label:(0,a.__)("URL string to plugin (to app dir)","tsu-mapconnect"),value:""===p?c:p,onChange:t=>e.setAttributes({MC_pluginURL:t})})),(0,t.createElement)(n.PanelRow,null,(0,t.createElement)("p",null,(0,a.__)("Warning: Only change values here if you know what you are doing. If changed by accident, you can reset the values to the defaults using the reset button below.","tsu-mapconnect"))),(0,t.createElement)(n.PanelRow,null,(0,t.createElement)(n.Button,{className:"is-secondary",variant:"secondary",onClick:()=>e.setAttributes({MC_baseUrlset:"",MC_metaUrlset:"",MC_dataUrlset:"",MC_pluginURL:""})},(0,a.__)("Reset","tsu-mapconnect"))))),(0,t.createElement)("h3",null,(0,a.__)("Mapconnect Mapplication","tsu-mapconnect")),(0,t.createElement)("div",{className:"tsum-metablock-container"},(0,t.createElement)("div",{className:"tsum-metablock-left"},(0,t.createElement)("h4",null,(0,a.__)("Colours","tsu-mapconnect")),(0,t.createElement)("div",{className:"tsum-col-pal"},(0,t.createElement)("span",{className:"tsum-head-pal"},(0,a.__)("Map feature fill","tsu-mapconnect")),(0,t.createElement)(n.ColorPalette,{colors:[{name:"DIMB Blau",color:"rgb(0, 94, 169)"},{name:"DIMB Dunkelblau",color:"rgb(16, 45, 105)"},{name:"DIMB Hellblau",color:"rgb(59, 169, 210)"},{name:"DIMB Orange",color:"rgb(236, 102, 8)"},{name:"DIMB Purple",color:"rgb(149, 27, 129)"},{name:"DIMB Dunkelgrau",color:"rgb(80, 85, 85)"},{name:"DIMB Grau",color:"rgb(157, 169, 177)"},{name:"DIMB Schwarz",color:"rgb(0, 0, 100)"},{name:"DIMB WeiÃŸ",color:"rgb(0, 0, 0)"}],value:void 0===_.featFillRGB||""===_.featFillRGB?"rgb("+d.featFillRGB+")":"rgb("+_.featFillRGB+")",onChange:t=>e.setAttributes({MC_styleset:t})}))),(0,t.createElement)("div",{className:"tsum-metablock-right"},(0,t.createElement)("h4",null,(0,a.__)("Styling options","tsu-mapconnect")))))},save:function(e){const{attributes:{MC_baseUrldef:a,MC_metaUrldef:l,MC_dataUrldef:n,MC_pluginURLdef:r,MC_baseUrlset:o,MC_metaUrlset:s,MC_dataUrlset:c,MC_pluginURL:i,MC_styleDefaults:u,MC_styleset:m}}=e,p=""===o||"<DEFAULT>"===o?"https://dimb-api-20230512.netlify.app/api/igs":o,d=0===m.length||void 0===m?u:m;return(0,t.createElement)("div",null,(0,t.createElement)("div",{id:"root"}),(0,t.createElement)("script",{src:(""===i?r:i)+"/app/main.js"}),(0,t.createElement)("script",{dangerouslySetInnerHTML:{__html:`window.mapconfig = { \n                                    style: {\n                                        featFillRGB: '${d.featFillRGB}',\n                                        featFillAlpha: '${d.featFillAlpha}',\n                                        featStrokeRGB: '${d.featStrokeRGB}',\n                                        featStrokeWidth: '${d.featStrokeWidth}',\n                                        featHighlightRGB: '${d.featHighlightRGB}',\n                                        headlineRGB: '${d.headlineRGB}',\n                                        textRGB: '${d.textRGB}'\n                                    }, \n                                    paths: { \n                                        api: '${p}?simplify=0.005'  \n                                    },\n                                    height: '500',\n                                    addClasses: ''\n                                };`}}))}})}},a={};function l(e){var n=a[e];if(void 0!==n)return n.exports;var r=a[e]={exports:{}};return t[e](r,r.exports,l),r.exports}l.m=t,e=[],l.O=(t,a,n,r)=>{if(!a){var o=1/0;for(u=0;u<e.length;u++){for(var[a,n,r]=e[u],s=!0,c=0;c<a.length;c++)(!1&r||o>=r)&&Object.keys(l.O).every((e=>l.O[e](a[c])))?a.splice(c--,1):(s=!1,r<o&&(o=r));if(s){e.splice(u--,1);var i=n();void 0!==i&&(t=i)}}return t}r=r||0;for(var u=e.length;u>0&&e[u-1][2]>r;u--)e[u]=e[u-1];e[u]=[a,n,r]},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={656:0,564:0};l.O.j=t=>0===e[t];var t=(t,a)=>{var n,r,[o,s,c]=a,i=0;if(o.some((t=>0!==e[t]))){for(n in s)l.o(s,n)&&(l.m[n]=s[n]);if(c)var u=c(l)}for(t&&t(a);i<o.length;i++)r=o[i],l.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return l.O(u)},a=globalThis.webpackChunktsu_mapconnect_meta_block=globalThis.webpackChunktsu_mapconnect_meta_block||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();var n=l.O(void 0,[564],(()=>l(628)));n=l.O(n)})();