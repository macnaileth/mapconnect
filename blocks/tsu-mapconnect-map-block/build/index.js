!function(){"use strict";var e,t={628:function(){var e=window.wp.blocks,t=window.wp.element,n=(window.React,window.wp.i18n),a=window.wp.blockEditor,l=(window.wp.data,window.wp.coreData,window.wp.components),r=JSON.parse('{"u2":"tsum-metafields/tsu-mapconnect-map-block"}');(0,e.registerBlockType)(r.u2,{edit:function(e){const{attributes:{MC_baseUrldef:r,MC_metaUrldef:o,MC_dataUrldef:s,MC_pluginURLdef:c,MC_baseUrlset:i,MC_metaUrlset:u,MC_dataUrlset:m,MC_pluginURL:p,MC_styleDefaults:d,MC_styleset:f}}=e,_=(0,a.useBlockProps)();return console.log("*** App running @URL: "+p+" ***"),console.log("styles defaults: ",d),(0,t.createElement)("div",_,(0,t.createElement)(a.InspectorControls,null,(0,t.createElement)(l.PanelBody,{title:(0,n.__)("Settings")+": "+(0,n.__)("Paths","tsu-mapconnect"),initialOpen:!1},(0,t.createElement)(l.PanelRow,null,(0,t.createElement)(l.TextControl,{className:"tsum-metablock-input",label:(0,n.__)("Base URL","tsu-mapconnect"),value:""===i?r:i,onChange:t=>e.setAttributes({MC_baseUrlset:t}),help:(0,n.__)("Set the URL to the API delivering the geoJSON data here. Default value: <DEFAULT>.","tsu-mapconnect")})),(0,t.createElement)(l.PanelRow,null,(0,t.createElement)(l.TextControl,{className:"tsum-metablock-input",label:(0,n.__)("URL for Metadata","tsu-mapconnect"),value:""===u?o:u,onChange:t=>e.setAttributes({MC_metaUrlset:t})})),(0,t.createElement)(l.PanelRow,null,(0,t.createElement)(l.TextControl,{className:"tsum-metablock-input",label:(0,n.__)("URL for Database","tsu-mapconnect"),value:""===m?s:m,onChange:t=>e.setAttributes({MC_dataUrlset:t})})),(0,t.createElement)(l.PanelRow,null,(0,t.createElement)(l.TextControl,{className:"tsum-metablock-input",label:(0,n.__)("URL string to plugin (to app dir)","tsu-mapconnect"),value:""===p?c:p,onChange:t=>e.setAttributes({MC_pluginURL:t})})),(0,t.createElement)(l.PanelRow,null,(0,t.createElement)("p",null,(0,n.__)("Warning: Only change values here if you know what you are doing. If changed by accident, you can reset the values to the defaults using the reset button below.","tsu-mapconnect"))),(0,t.createElement)(l.PanelRow,null,(0,t.createElement)(l.Button,{className:"is-secondary",variant:"secondary",onClick:()=>e.setAttributes({MC_baseUrlset:"",MC_metaUrlset:"",MC_dataUrlset:"",MC_pluginURL:""})},(0,n.__)("Reset","tsu-mapconnect"))))),(0,t.createElement)("h3",null,(0,n.__)("Mapconnect Mapplication","tsu-mapconnect")),(0,t.createElement)("div",{className:"tsum-metablock-container"},(0,t.createElement)("div",{className:"tsum-metablock-left"},(0,t.createElement)("h4",null,(0,n.__)("Colours","tsu-mapconnect")),(0,t.createElement)("div",{className:"tsum-col-pal"},(0,t.createElement)("span",{className:"tsum-head-pal"},(0,n.__)("Map feature fill","tsu-mapconnect")),(0,t.createElement)(l.ColorPalette,{colors:[{name:"DIMB Blau",color:"rgb(0, 94, 169)"},{name:"DIMB Dunkelblau",color:"rgb(16, 45, 105)"},{name:"DIMB Hellblau",color:"rgb(59, 169, 210)"},{name:"DIMB Orange",color:"rgb(236, 102, 8)"},{name:"DIMB Purple",color:"rgb(149, 27, 129)"},{name:"DIMB Dunkelgrau",color:"rgb(80, 85, 85)"},{name:"DIMB Grau",color:"rgb(157, 169, 177)"},{name:"DIMB Schwarz",color:"rgb(0, 0, 100)"},{name:"DIMB WeiÃŸ",color:"rgb(0, 0, 0)"}],value:void 0===f.featFillRGB||""===f.featFillRGB?"rgb("+d.featFillRGB+")":"rgb("+f.featFillRGB+")",onChange:t=>e.setAttributes({MC_styleset:t})}))),(0,t.createElement)("div",{className:"tsum-metablock-right"},(0,t.createElement)("h4",null,(0,n.__)("Styling options","tsu-mapconnect")))))},save:function(e){const{attributes:{MC_baseUrldef:n,MC_metaUrldef:a,MC_dataUrldef:l,MC_pluginURLdef:r,MC_baseUrlset:o,MC_metaUrlset:s,MC_dataUrlset:c,MC_pluginURL:i,MC_styleDefaults:u,MC_styleset:m}}=e,p=""===o||"<DEFAULT>"===o?"https://dimb-api-20230512.netlify.app/api/igs":o,d=0===m.length||void 0===m?u:m;return(0,t.createElement)("div",null,(0,t.createElement)("div",{id:"root"}),(0,t.createElement)("script",{src:(""===i?r:i)+"/app/main.js"}),(0,t.createElement)("script",{dangerouslySetInnerHTML:{__html:`window.mapconfig = { \n                                    style: {\n                                        featFillRGB: '${d.featFillRGB}',\n                                        featFillAlpha: '${d.featFillAlpha}',\n                                        featStrokeRGB: '${d.featStrokeRGB}',\n                                        featStrokeWidth: '${d.featStrokeWidth}',\n                                        featHighlightRGB: '${d.featHighlightRGB}',\n                                        headlineRGB: '${d.headlineRGB}',\n                                        textRGB: '${d.textRGB}'\n                                    }, \n                                    paths: { \n                                        api: '${p}?simplify=0.005'  \n                                    },\n                                    height: '500',\n                                    addClasses: ''\n                                };`}}))}})}},n={};function a(e){var l=n[e];if(void 0!==l)return l.exports;var r=n[e]={exports:{}};return t[e](r,r.exports,a),r.exports}a.m=t,e=[],a.O=function(t,n,l,r){if(!n){var o=1/0;for(u=0;u<e.length;u++){n=e[u][0],l=e[u][1],r=e[u][2];for(var s=!0,c=0;c<n.length;c++)(!1&r||o>=r)&&Object.keys(a.O).every((function(e){return a.O[e](n[c])}))?n.splice(c--,1):(s=!1,r<o&&(o=r));if(s){e.splice(u--,1);var i=l();void 0!==i&&(t=i)}}return t}r=r||0;for(var u=e.length;u>0&&e[u-1][2]>r;u--)e[u]=e[u-1];e[u]=[n,l,r]},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={826:0,431:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var l,r,o=n[0],s=n[1],c=n[2],i=0;if(o.some((function(t){return 0!==e[t]}))){for(l in s)a.o(s,l)&&(a.m[l]=s[l]);if(c)var u=c(a)}for(t&&t(n);i<o.length;i++)r=o[i],a.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return a.O(u)},n=self.webpackChunktsu_mapconnect_meta_block=self.webpackChunktsu_mapconnect_meta_block||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var l=a.O(void 0,[431],(function(){return a(628)}));l=a.O(l)}();